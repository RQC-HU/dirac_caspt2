cmake_minimum_required(VERSION 3.7)
project(dirac_caspt2 Fortran)
option(MPI "Enable MPI?" OFF)
option(OPENMP "Enable OpenMP?" OFF)
option(MKL "Enable MKL?" ON)
option(Utest "Enable unit test?" OFF)
set(EXECUTABLE_OUTPUT_PATH ${CMAKE_CURRENT_SOURCE_DIR}/bin)
# Deny In-source build ( Ref : https://github.com/eigenteam/eigen-git-mirror/blob/36b95962756c1fce8e29b1f8bc45967f30773c00/CMakeLists.txt#L7-L9)
if(${CMAKE_SOURCE_DIR} STREQUAL ${CMAKE_BINARY_DIR})
  message(FATAL_ERROR "In-source builds not allowed. Please make a new directory (called a build directory) and run CMake from there. You may need to remove CMakeCache.txt. ")
endif()
enable_language(Fortran)
if(MPI)
    find_package(MPI REQUIRED)
endif()
if(OPENMP)
    find_package(OpenMP REQUIRED)
endif()
set(CMAKE_SHARED_LIBRARY_LINK_Fortran_FLAGS "")
if(CMAKE_Fortran_COMPILER_ID STREQUAL Intel)
	add_compile_options(-cpp -i8 -I$ENV{MKLROOT}/include -pad -mp1 -integer-size 64 -unroll -warn nounused -nogen-interface) # "-warn nounused" means "-warn all -warn nounused"
	link_libraries(-i8)
    if(MKL)
        link_libraries(-L$ENV{MKLROOT}/lib/intel64 -lmkl_intel_ilp64 -lmkl_intel_thread -lmkl_core -liomp5 -lpthread -lm -ldl)
    endif()
    if(OPENMP)
        add_compile_options(-qopenmp)
    	link_libraries(-qopenmp)
    endif()
elseif(CMAKE_Fortran_COMPILER_ID STREQUAL GNU)
	add_compile_options(-cpp -fdefault-integer-8 -m64 -I$ENV{MKLROOT}/include -Wall -Wno-unused-variable)
    link_libraries(-fdefault-integer-8 -m64)
    if(MKL)
        link_libraries(-L$ENV{MKLROOT}/lib/intel64 -Wl,--no-as-needed -lmkl_gf_ilp64 -lmkl_core -lmkl_gnu_thread -lgomp -lpthread -lm -ldl)
    endif()
    if(OPENMP)
        add_compile_options(-fopenmp)
        link_libraries(-fopenmp)
    endif()
else()
endif()
if(MPI)
	add_compile_options(-DHAVE_MPI)
endif()
add_subdirectory(src)
add_subdirectory(test)
